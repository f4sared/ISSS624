---
title: "ex5"
editor: visual
---

```{r}
pacman::p_load(here,
               sf, tidyverse, spdep,
               funModeling, tmap, ggpubr,
               corrplot, heatmaply, cluster, ClustGeo, factoextra, GGally,
               blorr, skimr, caret, GWmodel,report
               )
```

```{r}
boundary_path <- here("data", "dataOsun", "Osun.rds")
boundary_path
```

```{r}
data_path <- here("data", "dataOsun", "Osun_wp_sf.rds")
data_path
```

```{r}
osun <- read_rds(boundary_path)
```

```{r}
osun_wp_sf <- read_rds(data_path)
```

```{r}
osun_wp_sf %>% freq(input = 'status')
```

```{r}
#| eval: false
tmap_mode('view')
tm_shape(osun)+
  tm_polygons(alpha=0.4)+
  tm_shape(osun_wp_sf) + 
  tm_dots(col="status", alpha = 0.6) + 
  tm_view(set.zoom.limits = c(9,12))
```

```{r}
#| eval: false
osun_wp_sf %>% skim() 
```

```{r}
#| eval: false
osun_wp_sf_clean <- osun_wp_sf %>% 
  filter_at(vars(status,
                 distance_to_primary_road,
                 distance_to_secondary_road,
                 distance_to_tertiary_road,
                 distance_to_city,
                 distance_to_town,
                 water_point_population,
                 local_population_1km,
                 usage_capacity,
                 is_urban,
                 water_source_clean),
            all_vars(!is.na(.))) %>% 
  mutate(usage_capacity = as.factor(usage_capacity))
```

```{r}
#| eval: false
osun_wp <- osun_wp_sf_clean %>% select(c(7,35:39,42:43,46:47,57)) %>% st_set_geometry(NULL)
```

```{r}
#| eval: false
cluster_vars.cor = cor(osun_wp[,2:7])
corrplot.mixed(cluster_vars.cor,
               lower="ellipse",
               upper = "number",
               tl.pos="lt",
               diag="l",
               tl.col="black")
```

```{r}
#| eval: false
model <- glm(status ~ distance_to_primary_road +
             
               distance_to_secondary_road + 
               distance_to_tertiary_road + 
               distance_to_city + 
               distance_to_town + 
               is_urban +
               usage_capacity + 
               water_source_clean + 
               water_point_population + 
               local_population_1km,
             data = osun_wp_sf_clean,
             family = binomial(link = "logit"))
```

```{r}
#| eval: false
blr_regress(model)
```

```{r}
#| eval: false
# report(model)
```

```{r}
#| eval: false
blr_confusion_matrix(model, cutoff=0.5)
```

```{r}
#| eval: false
osun_wp_sp <- osun_wp_sf_clean %>% 
  select(c(status,
           distance_to_primary_road,
           distance_to_secondary_road,
           distance_to_tertiary_road,
           distance_to_city,
           distance_to_town,
           water_point_population,
           local_population_1km,
           is_urban,
           usage_capacity,
           water_source_clean)) %>% as_Spatial() 
osun_wp_sp
```

```{r}
#| eval: false
bw.fixed <- bw.ggwr(status ~ 
                      distance_to_primary_road + 
                      distance_to_secondary_road+
                      distance_to_city+
                      distance_to_town+
                      water_point_population+
                      local_population_1km+
                      is_urban+
                      usage_capacity+
                      water_source_clean,
                    data=osun_wp_sp,
                    family="binomial",
                    approach="AIC",
                    kernel = "gaussian",
                    adaptive = FALSE,
                    longlat = FALSE)
```

```{r}
#| eval: false
bw.fixed
```

```{r}
#| eval: false
gwlr.fixed <- ggwr.basic(status ~
                           distance_to_primary_road + 
                           distance_to_secondary_road + 
                           distance_to_tertiary_road + 
                           distance_to_city + 
                           distance_to_town + 
                           water_point_population + 
                           local_population_1km + 
                           is_urban + 
                           usage_capacity + 
                           water_source_clean,
                         data=osun_wp_sp,
                         bw=2448.701,
                         family = "binomial",
                         kernel = "gaussian",
                         adaptive = FALSE,
                         longlat = FALSE)
```

```{r}
#| eval: false
gwlr.fixed
```

```{r}
#| eval: false
gwr.fixed <- as.data.frame(gwlr.fixed$SDF)
```

```{r}
#| eval: false
gwr.fixed <- gwr.fixed %>% mutate(most=ifelse(gwr.fixed$yhat >= 0.5, T, F))
```

```{r}
#| eval: false
gwr.fixed$y <- as.factor(gwr.fixed$y)
gwr.fixed$most <- as.factor(gwr.fixed$most)
CM <- confusionMatrix(data=gwr.fixed$most, reference = gwr.fixed$y)
CM
```

```{r}
#| eval: false
osun_wp_sf_selected <- osun_wp_sf_clean %>% select(c(ADM2_EN, ADM2_PCODE,
                                                     ADM1_EN, ADM1_PCODE,
                                                     status))
```

```{r}
#| eval: false
gwr_sf.fixed <- cbind(osun_wp_sf_selected, gwr.fixed)
```

```{r}
#| eval: false
tmap_mode("view")
prob_T <- tm_shape(osun) + 
  tm_polygons(alpha=0.1) + 
  tm_shape(gwr_sf.fixed) + 
  tm_dots(col="yhat",
          border.col = "gray60",
          border.lwd = 1) + 
  tm_view(set.zoom.limits = c(8,14))
prob_T
```

```{r}
#| eval: false
tertiary_TV <- tm_shape(osun) + 
  tm_polygons(alpha=0.1) + 
  tm_shape(gwr_sf.fixed) + 
  tm_dots(col="distance_to_tertirary_road_TV", border.col="gray60", border.lwd=1) + tm_view(set.zoom.limits = c(8,14))
```

```{r}
#| eval: false
tmap_arrange(tertiary_SE, tertiary_TV, asp=1, ncol=2, sync=True)
```
